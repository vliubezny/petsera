steps:
  # - id: build-image
  #   name: gcr.io/cloud-builders/docker
  #   entrypoint: make
  #   args: ["image", "push"]

  # - id: "migrate-db"
  #   name: "migrate/migrate:v4.14.1"
  #   secretEnv:
  #     - DATABASE_PASS
  #   entrypoint: /bin/sh
  #   args:
  #     - "-ce"
  #     - |
  #       apk add wget
  #       wget -q https://dl.google.com/cloudsql/cloud_sql_proxy.linux.amd64 -O /usr/local/bin/cloud_sql_proxy
  #       chmod +x /usr/local/bin/cloud_sql_proxy
  #       cloud_sql_proxy -instances=${_INSTANCE_CONNECTION_NAME}=tcp:5432 & sleep 2;
  #       migrate -database "postgres://${_DATABASE_USER}:$${DATABASE_PASS}@localhost:5432/${_DATABASE_NAME}?sslmode=disable" \
  #         -path scripts/migrations/postgres up
  #       echo "Migration completed successfully"

  - id: "deploy-chart"
    name: "gcr.io/$PROJECT_ID/helm"
    env:
      - "CLOUDSDK_COMPUTE_ZONE=europe-north1"
      - "CLOUDSDK_CONTAINER_CLUSTER=petsera"
    secretEnv:
      - DATABASE_PASS
      - MAPS_API_KEY
    entrypoint: /bin/bash
    args:
      - "-ce"
      - |
        /builder/helm.bash upgrade --install -f ./charts/prod-values.yaml \
          --set config.mapsAPIKey=${MAPS_API_KEY} \
          --set config.db.password=${DATABASE_PASS} \
          --set image.pullPolicy=Always --set image.tag=latest \
          petsera ./charts/petsera

options:
  dynamic_substitutions: true

substitutions:
  _DATABASE_USER: postgres
  _DATABASE_NAME: petsera
  _INSTANCE_CONNECTION_NAME: ${PROJECT_ID}:europe-north1:petsera-postgres

availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/petsera-db-password/versions/latest
      env: DATABASE_PASS
    - versionName: projects/$PROJECT_ID/secrets/maps-api-key-prod/versions/latest
      env: MAPS_API_KEY
